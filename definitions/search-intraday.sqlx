config {
  type: "operation",  -- We use type "operation" to run a custom query like MERGE
  database: "search-v2-api-staging",
  schema: "search_api",
  name: "merge_search_intraday"
}

WITH events AS (
  SELECT
    TIMESTAMP_TRUNC(TIMESTAMP_MICROS(ga.event_timestamp), DAY) AS eventDate,
    'search' AS eventType,
    ga.user_pseudo_id AS userPseudoId,
    FORMAT_TIMESTAMP("%FT%TZ", TIMESTAMP_MICROS(ga.event_timestamp)) AS eventTime,
    (
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'search_term'
    ) AS searchQuery,
    SAFE_CAST(REGEXP_EXTRACT((
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'page_location'
    ), "page=(\\\\d+)") AS int64) - 1 AS `offset`,
    REGEXP_EXTRACT((
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'page_location'
    ), "order=([a-zA-Z\\\\-]+)") AS orderBy,
    ARRAY_TO_STRING(REGEXP_EXTRACT_ALL((
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'page_location'
    ), "((?:level_one_taxon|level_two_taxon|content_purpose_supergroup%5B%5D|public_timestamp%5Bfrom%5D|public_timestamp%5Bto%5D)=(?:%20&%20|[^&])*)"), "&") AS FILTER,
    (
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'ab_test'
    ) AS ab_test,
    item_params.value.string_value AS id,
    MAX(item.item_id),
    item.item_list_index
  FROM
    `ga4-analytics-352613.analytics_330577055.events_intraday_${getGa4TableDate()}` ga,
    UNNEST(items) AS item,
    UNNEST(item.item_params) AS item_params
  WHERE
    (
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'publishing_app'
    ) = "search-api"
    AND EXISTS (
      SELECT 1
      FROM UNNEST(event_params)
      WHERE KEY = 'search_term'
    )
    AND event_name = 'view_item_list'
    AND (((SAFE_CAST(REGEXP_EXTRACT((
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'page_location'
    ), "page=(\\\\d+)") AS int64) - 1) < 10)
    OR ((SAFE_CAST(REGEXP_EXTRACT((
      SELECT value.string_value
      FROM UNNEST(event_params)
      WHERE KEY = 'page_location'
    ), "page=(\\\\d+)") AS int64) - 1) IS NULL))
  GROUP BY
    eventDate,
    eventTime,
    userPseudoId,
    eventType,
    searchQuery,
    `offset`,
    orderBy,
    id,
    item_list_index,
    FILTER,
    ab_test
)

MERGE INTO `analytics_events_vertex.search-intraday-event` T
USING events S
ON
  T._PARTITIONTIME = S.eventDate
  AND T.eventType = S.eventType
  AND T.userPseudoId = S.userPseudoId
  AND T.eventTime = S.eventTime
  AND TO_JSON_STRING(T.documents) = TO_JSON_STRING(S.documents)
  AND TO_JSON_STRING(S.searchInfo) = TO_JSON_STRING(T.searchInfo)
  AND IFNULL(S.filter, "") = IFNULL(T.filter, "")
WHEN MATCHED THEN
  UPDATE SET
    T.searchInfo = S.searchInfo,
    T.FILTER = S.FILTER,
    T.tagIds = S.tagIds,
    T.documents = S.documents
WHEN NOT MATCHED THEN
  INSERT (_PARTITIONTIME, eventType, userPseudoId, eventTime, searchInfo, FILTER, tagIds, documents)
  VALUES (_PARTITIONTIME, eventType, userPseudoId, eventTime, searchInfo, FILTER, tagIds, documents)
