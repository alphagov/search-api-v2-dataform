config {
    type: "operations",
    schema: "search_api",
    name: "view_items",
    tags: ["search-daily"]
}

MERGE INTO
  `${dataform.projectConfig.vars.project_id}.analytics_events_vertex.view-item-event` T
USING
  (
  SELECT
    TIMESTAMP_TRUNC(TIMESTAMP_MICROS(ga.event_timestamp),DAY) AS _PARTITIONTIME,
    'view-item' AS eventType,
    CASE ga.user_pseudo_id
      WHEN 'false' THEN CONCAT(ga.user_pseudo_id,(SELECT SAFE_CAST(value.int_value AS STRING) FROM UNNEST(event_params) WHERE key = 'ga_session_id'))
      ELSE ga.user_pseudo_id
    END AS userPseudoId,
    FORMAT_TIMESTAMP("%FT%TZ",TIMESTAMP_MICROS(ga.event_timestamp)) AS eventTime,
    (CASE
        WHEN params.value.string_value IS NOT NULL THEN [STRUCT(params.value.string_value AS id, CAST(NULL AS string) AS name)]
    END
      ) AS documents
  FROM
    `ga4-analytics-352613.analytics_330577055.events_*` ga,
    UNNEST(event_params) AS params
  WHERE
    _TABLE_SUFFIX BETWEEN FORMAT_DATE('%Y%m%d',DATE_TRUNC(DATE_SUB(CURRENT_DATE(),INTERVAL 1 DAY),DAY)) AND FORMAT_DATE('%Y%m%d',DATE_TRUNC(DATE_SUB(CURRENT_DATE(),INTERVAL 1 DAY),DAY)) AND
    ga.event_name='page_view'
    AND params.key='content_id') S
ON
  T._PARTITIONTIME = S._PARTITIONTIME
  AND T.eventType = S.eventType
  AND T.userPseudoId = S.userPseudoId
  AND T.eventTime = S.eventTime
  AND TO_JSON_STRING(T.documents) = TO_JSON_STRING(S.documents)
  -- and T.documents.id = S.documents.id and T.documents.name = S.documents.name
  WHEN NOT MATCHED
  THEN
INSERT
  (_PARTITIONTIME,
    eventType,
    userPseudoId,
    eventTime,
    documents)
VALUES
  (_PARTITIONTIME, eventType, userPseudoId, eventTime, documents)

