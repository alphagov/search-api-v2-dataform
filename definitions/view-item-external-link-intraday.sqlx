config {
    type: "operations",
    database: "search-v2-api-staging",
    schema: "search_api",
    name: "view-item-external-link-intraday"
}

js {
    const getGa4TableDate = () => {
        const date = new Date();
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}${month}${day}`;
    };
}

MERGE INTO
  `${dataform.projectConfig.vars.project_id}.analytics_events_vertex.view-item-external-link-intraday-event` T
USING
  (
  SELECT
    TIMESTAMP_TRUNC(TIMESTAMP_MICROS(ga.event_timestamp),DAY) AS _PARTITIONTIME,
    'view-item' AS eventType,
    CASE ga.user_pseudo_id
      WHEN 'false' THEN CONCAT(ga.user_pseudo_id,(SELECT SAFE_CAST(value.int_value AS STRING) FROM UNNEST(event_params) WHERE key = 'ga_session_id'))
      ELSE ga.user_pseudo_id
    END AS userPseudoId,
    FORMAT_TIMESTAMP("%FT%TZ",TIMESTAMP_MICROS(ga.event_timestamp)) AS eventTime,
    (CASE
        WHEN ( SELECT value.string_value FROM UNNEST(items), UNNEST(item_params) WHERE KEY = 'item_content_id') IS NOT NULL THEN [STRUCT(( SELECT value.string_value FROM UNNEST(items), UNNEST(item_params) WHERE KEY = 'item_content_id') AS id, CAST(NULL AS string) AS name)]
    END
      ) AS documents,
  FROM
    `ga4-analytics-352613.analytics_330577055.events_intraday_*` ga
  WHERE
    _TABLE_SUFFIX BETWEEN FORMAT_DATE('%Y%m%d',DATE_TRUNC(DATE_SUB(CURRENT_DATE(),INTERVAL 0 DAY),DAY)) AND FORMAT_DATE('%Y%m%d',DATE_TRUNC(DATE_SUB(CURRENT_DATE(),INTERVAL 0 DAY),DAY)) AND
    ga.event_name='select_item'
    AND (
    SELECT
      value.string_value
    FROM
      UNNEST(event_params)
    WHERE
      KEY = 'outbound') = "true"
    AND (
    SELECT
      value.string_value
    FROM
      UNNEST(items),
      UNNEST(item_params)
    WHERE
      KEY = 'item_content_id') IS NOT NULL) S
ON
  T._PARTITIONTIME = S._PARTITIONTIME
  AND T.eventType = S.eventType
  AND T.userPseudoId = S.userPseudoId
  AND T.eventTime = S.eventTime
  AND TO_JSON_STRING(T.documents) = TO_JSON_STRING(S.documents)
  -- and T.documents.id = S.documents.id and T.documents.name = S.documents.name
  WHEN NOT MATCHED
  THEN
INSERT
  (_PARTITIONTIME,
    eventType,
    userPseudoId,
    eventTime,
    documents)
VALUES
  (_PARTITIONTIME, eventType, userPseudoId, eventTime, documents)

